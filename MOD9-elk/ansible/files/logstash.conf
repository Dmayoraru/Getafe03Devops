# ansible/files/logstash.conf

input {
  # Escuchar logs enviados vía UDP en el puerto 5144 (configurado en docker-compose.yml)
  syslog {
    port => 5144
    codec => "json" # Asume que el formato de log de Docker es JSON
    type => "docker-syslog" # Añade un tipo para facilitar el filtrado/búsqueda
  }

  # Alternativa: Input TCP si usas el driver 'gelf' o un TCP syslog
  # tcp {
  #   port => 5000 # O el puerto que elijas
  #   codec => "json" # O gelf {} si usas GELF driver
  # }

  # Alternativa: Input Beats si usaras Filebeat en la VM recurso
  # beats {
  #   port => 5044
  # }
}

filter {
  # Aquí podrías añadir filtros más complejos, por ejemplo, con 'grok' si los logs no son JSON
  # o para extraer campos específicos de los mensajes de WordPress/Apache.
  # Por ahora, lo mantenemos simple.

  # Ejemplo: Si el codec JSON fallara, intentar parsear JSON del campo message
  # if [message] =~ /^{.*}$/ {
  #   json {
  #     source => "message"
  #     # target => "parsed_json" # Opcional: Poner el JSON parseado en un campo anidado
  #   }
  # }

  # Extraer información de la etiqueta 'tag' generada por Docker
  if [program] == "wp_container" {
      grok {
          match => { "message" => "^%{DATA:container_name}/%{DATA:container_id}: %{GREEDYDATA:actual_message}" }
          overwrite => [ "message" ] # Sobrescribir mensaje original con el mensaje real
      }
      mutate {
          add_field => { "application" => "wordpress" }
          # Puedes remover campos si no los necesitas
          # remove_field => [ "program", "host" ] # 'host' viene de syslog, puede ser confuso
      }
  }
}

output {
  # Enviar los eventos procesados a Elasticsearch
  elasticsearch {
    hosts => ["http://192.168.33.12:9200"] # Dirección de Elasticsearch
    index => "wordpress-logs-%{+YYYY.MM.dd}" # Índice diario para los logs
    # user => "elastic" # Descomentar si habilitas seguridad en Elasticsearch
    # password => "your_password" # Descomentar si habilitas seguridad
  }

  # Opcional: Salida a la consola para debugging durante la configuración
  # stdout {
  #   codec => rubydebug
  # }
}
