# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Configuración de la red interna
  config.vm.network "private_network", ip: "192.168.33.9", virtualbox__intnet: true

  # Definición de las máquinas virtuales
  {
    "central" => { ip: "192.168.33.10", hostname: "central", ports: { 80 => 8888, 443 => 4430 } },
    "nodo1"   => { ip: "192.168.33.11", hostname: "nodo1" },
    "nodo2"   => { ip: "192.168.33.12", hostname: "nodo2" }
  }.each do |name, options|
    config.vm.define name do |node|
      node.vm.box = "bento/ubuntu-22.04"
      node.vm.hostname = options[:hostname]
      node.vm.network "private_network", ip: options[:ip], virtualbox__intnet: true

      # Redirección de puertos para "central"
      if options[:ports]
        options[:ports].each do |guest_port, host_port|
          node.vm.network "forwarded_port", guest: guest_port, host: host_port
        end
      end

      # Aprovisionamiento con shell
      node.vm.provision "shell", inline: <<-SHELL
        # Actualización del sistema
        apt-get update -y
        apt-get upgrade -y

        # Instalación de Docker en todos los nodos
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        usermod -aG docker vagrant

        # Instalación específica según el nodo
        if [[ $(hostname) == "central" ]]; then
          # Instalación de Nginx en central
          apt-get install -y nginx

          # Creación del certificado SSL
          mkdir -p /etc/nginx/ssl
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /etc/nginx/ssl/nginx.key \
            -out /etc/nginx/ssl/nginx.crt \
            -subj "/C=ES/ST=Madrid/L=Getafe/O=Devops/CN=central"

          # Configuración de Nginx como proxy inverso
          cat > /etc/nginx/sites-available/default <<EOF
server {
    listen 80;
    server_name central;

    location / {
        proxy_pass http://192.168.33.11:8080;
    }
}

server {
    listen 443 ssl;
    server_name central;

    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    location / {
        proxy_pass http://192.168.33.11:8080;
    }
}
EOF

          systemctl restart nginx

        elif [[ $(hostname) == "nodo1" || $(hostname) == "nodo2" ]]; then
          # Creación del Dockerfile en nodo1 y nodo2
          mkdir -p /srv
          echo "Bienvenido a #{name}" > /srv/index.html

          cat > /srv/Dockerfile <<EOF
FROM alpine:latest
RUN apk add --no-cache python3
WORKDIR /srv
COPY index.html /srv/
CMD ["python3", "-m", "http.server", "8080"]
EOF

          # Construcción y ejecución del contenedor
          cd /srv
          docker build -t srv-web .
          docker run -d --name web-server -p 8080:8080 srv-web
        fi
      SHELL
    end
  end
end
