# -*- mode: ruby -*-
# vi: set ft=ruby :

# Configuración global del entorno Vagrant
Vagrant.configure("2") do |config|
  # Definimos una red privada común para todas las máquinas
  ip_base = "192.168.33."
  ip_start = 10

  # Función para instalar Docker en Ubuntu
  def install_docker_ubuntu_script
    <<-SCRIPT
      # Actualizar el sistema
      sudo apt-get update -y && sudo apt-get upgrade -y

      # Instalar dependencias necesarias
      sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

      # Agregar la clave GPG oficial de Docker
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

      # Agregar el repositorio de Docker
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      # Instalar Docker
      sudo apt-get update -y
      sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Agregar al usuario 'vagrant' al grupo 'docker'
      sudo usermod -aG docker vagrant
    SCRIPT
  end

  # Función para instalar Docker en Rocky Linux
  def install_docker_rocky_script
    <<-SCRIPT
      # Actualizar el sistema
      sudo dnf update -y

      # Instalar dependencias necesarias
      sudo dnf install -y dnf-utils device-mapper-persistent-data lvm2

      # Agregar el repositorio oficial de Docker
      sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

      # Instalar Docker
      sudo dnf install -y docker-ce docker-ce-cli containerd.io

      # Iniciar y habilitar el servicio de Docker
      sudo systemctl start docker
      sudo systemctl enable docker

      # Agregar al usuario 'vagrant' al grupo 'docker'
      sudo usermod -aG docker vagrant
    SCRIPT
  end

  # Definición de las máquinas virtuales
  machines = {
    "manager" => { box: "bento/ubuntu-22.04", ip: "#{ip_base}#{ip_start}", provision_script: :ubuntu },
    "nodo1"   => { box: "bento/ubuntu-22.04", ip: "#{ip_base}#{ip_start + 1}", provision_script: :ubuntu },
    "nodo2"   => { box: "bento/ubuntu-22.04", ip: "#{ip_base}#{ip_start + 2}", provision_script: :ubuntu },
    "nodo3"   => { box: "bento/rockylinux-8", ip: "#{ip_base}#{ip_start + 3}", provision_script: :rocky },
    "nodo4"   => { box: "bento/rockylinux-8", ip: "#{ip_base}#{ip_start + 4}", provision_script: :rocky }
  }

  # Crear las máquinas virtuales
  machines.each do |name, settings|
    config.vm.define name do |machine|
      machine.vm.box = settings[:box]
      machine.vm.hostname = name
      machine.vm.network "private_network", ip: settings[:ip]

      # Configurar el provisionamiento según el sistema operativo
      if settings[:provision_script] == :ubuntu
        machine.vm.provision "shell", inline: install_docker_ubuntu_script
      elsif settings[:provision_script] == :rocky
        machine.vm.provision "shell", inline: install_docker_rocky_script
      end

      # Configuración de recursos (opcional)
      machine.vm.provider "virtualbox" do |vb|
        vb.memory = 2048
        vb.cpus = 2
      end
    end
  end
end
